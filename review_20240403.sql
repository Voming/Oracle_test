CREATE OR REPLACE FUNCTION BONUS_CALC(V_EMPID EMPLOYEE.EMP_ID%TYPE)
RETURN NUMBER
IS
    V_SAL EMPLOYEE.SALARY%TYPE;
    V_BONUS EMPLOYEE.BONUS%TYPE;
    CALC_SAL NUMBER;
BEGIN 
    SELECT SALARY, NVL(BONUS, 0)
    INTO V_SAL, V_BONUS
    FROM EMPLOYEE
    WHERE EMP_ID = V_EMPID;
    
    CALC_SAL := (V_SAL + (V_SAL + V_BONUS)) *12;
    RETURN CALC_SAL;
END;
/

SELECT EMP_ID, EMP_NAME, BONUS_CALC(EMP_ID) FROM EMPLOYEE;

SET AUTOPRINT ON;

VARIABLE VAR_CALC NUMBER;
EXEC : VAR_CALC := BONUS_CALC('&EMP_ID');
PRINT VAR_CALC;

SELECT EMP_ID, EMP_NAME, BONUS_CALC(EMP_ID) FROM EMPLOYEE
WHERE BONUS_CALC(EMP_ID) >=50000000 ORDER BY 3 DESC;


SELECT EMP_ID,SALARY, '원' AS 단위, '100a' as ab FROM EMPLOYEE;

SELECT ENAME, SAL, RANK() OVER(ORDER BY SAL DESC) RANK,
DENSE_RANK() OVER(ORDER BY SAL DESC) DENS_RANK
FROM EMP
ORDER BY SAL DESC;

SELECT ENAME, SAL, RANK() OVER(ORDER BY SAL DESC, COMM DESC) RANK
	FROM EMP
	ORDER BY SAL DESC, COMM DESC;
    
SELECT DEPTNO, ENAME, SAL, COMM,
	RANK() OVER(PARTITION BY DEPTNO ORDER BY SAL DESC, COMM DESC) RANK
	FROM EMP
	ORDER BY DEPTNO, SAL DESC, COMM DESC;
    
SELECT DEPTNO, ENAME, SAL,
	MIN(SAL) KEEP(DENSE_RANK FIRST ORDER BY SAL) OVER(PARTITION BY DEPTNO) SAL_MIN,
	MAX(SAL) KEEP(DENSE_RANK LAST ORDER BY SAL) OVER(PARTITION BY DEPTNO) SAL_MAX
	FROM EMP
	ORDER BY DEPTNO, SAL DESC;
    
SELECT ENAME, DEPTNO, SAL,
    --위의 행값, 0 : 위의 행이 없으면 0 처리함 
    LAG(SAL, 1, 0) OVER (ORDER BY SAL) 이전값, 
    -- 이전행이 없으면 현재 행 출력
    LAG(SAL, 1, SAL) OVER (ORDER BY SAL) 조회2,
    --부서 그룹 안에서의 이전 행 값 출력
    LAG(SAL, 1, SAL) OVER (PARTITION BY DEPTNO ORDER BY SAL) 조회3
FROM EMP;
    
SELECT
	DECODE(SUBSTR(EMP_NO, 8, 1), 1, '남', 2, '여') "성별", 
	SUM(SALARY) "합계", --성별 별 급여 합계
    FLOOR(AVG(SALARY)) 평균, --성별 별 급여 평균 
	COUNT(*) "인원수"
FROM EMPLOYEE 
GROUP BY DECODE(SUBSTR(EMP_NO, 8, 1), 1, '남', 2, '여')
ORDER BY 2 DESC;

SELECT EMP_NAME, SALARY, E.SAL_LEVEL
FROM EMPLOYEE E
JOIN SAL_GRADE S ON (SALARY BETWEEN MIN_SAL AND MAX_SAL);

SELECT EMPNO, ENAME, SAL 
FROM EMP E
WHERE EXISTS (
	SELECT S.EMPNO FROM EMP S 
	WHERE S.MGR = E.EMPNO
	);
    
SELECT E.EMPNO, E.ENAME, E.MGR, M.ENAME
FROM EMP E, EMP M
WHERE E.MGR = M.EMPNO;

SELECT EMP_NAME, JOB_CODE, DEPT_CODE, HIRE_DATE 
FROM EMPLOYEE
WHERE (DEPT_CODE, JOB_CODE) = 
(SELECT DEPT_CODE, JOB_CODE FROM EMPLOYEE 
WHERE SUBSTR(EMP_NO, 8, 1) = 2 AND ENT_YN='Y');

SELECT * FROM USER_VIEWS;
SELECT * FROM ALL_CONSTRAINTS;
DESC USER_CONS_COLUMNS;
SELECT * FROM USER_TABLES;



CREATE OR REPLACE VIEW V_EMP_JOB(사번, 이름, 직급, 성별, 근무년수)
	AS 
    SELECT EMP_ID, EMP_NAME, JOB_NAME,
	DECODE(SUBSTR(EMP_NO, 8, 1), 1, '남', 2, '여'),  
	(EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM HIRE_DATE))  
	FROM EMPLOYEE
	JOIN JOB USING(JOB_CODE);
    
SELECT * FROM V_EMP_JOB;

CREATE INDEX IDX_DEPTCODE ON EMPLOYEE(DEPT_CODE);
SELECT * FROM USER_IND_COLUMNS;
CREATE INDEX IDX_DEPT ON DEPARTMENT(DEPT_ID, DEPT_TITLE);

SELECT * FROM USER_IND_COLUMNS
WHERE TABLE_NAME = 'DEPARTMENT';